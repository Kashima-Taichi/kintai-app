version: "3"
services:
  app: #サービス名
    build: #サービスのビルドを実行。ここではphpディレクトリ内のDockerfileをビルドする
      context: ./docker/php #コンテクストにはDockerfileがあるディレクトリのパスやGitリポジトリのURLを指定。
      # argsのTZはDockerfileで使用
      args: #構築時に build のオプション（args）を追加
        - TZ=${TZ}
    volumes: # コンテナのライフサイクルが終了した後でもデータを保管しておけるデータ領域
    # 本機能はホストとコンテナ間でファイルを受け渡すときに利用できる
    # コロンを挟んで、左側がホストOSで右側がコンテナ
      - ./src:/work # ホストOSのsrc内のファイルをコンテナのworkディレクトリへ
      - ./logs:/var/log/php
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    working_dir: /work # コンテナ内のワーキングディレクトリ
    environment: # 環境変数を追加します
      - DB_CONNECTION=mysql
      - DB_HOST=db
      # .envの値を${環境変数名}でdocker-compose.yml に受け渡しできる
      - DB_DATABASE=${DB_NAME}
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASS}
      - TZ=${TZ}
  web:
    # docker-compose.ymlで定義される各々のサービスは特定のimageかbuildを指定する必要がある
    image: nginx:1.17-alpine #コンテナを実行時に元となるイメージを指定
    depends_on: # 指定したコンテナの後に起動をする。ここではappコンテナの後に起動
      - app
    ports: # ホストのポート番号をコンテナのポート番号に接続する 左ホスト右コンテナ
      - 10080:80
    volumes:
      - ./src:/work
      - ./logs:/var/log/nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      - TZ=${TZ}
  db:
    image: mysql:8.0
    ports:
      - 13306:3306
    volumes:
      - db-store:/var/lib/mysql
      - ./logs:/var/log/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - TZ=${TZ}

volumes:
  db-store:

# http://127.0.0.1:10080/
# $ docker-compose up -d --build
# $ docker-compose down

# 参考URL http://docs.docker.jp/compose/compose-file.html#service-configuration-reference

# 初回
# https://qiita.com/ucan-lab/items/56c9dc3cf2e6762672f4#github%E3%81%8B%E3%82%89%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%82%92%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%B3
# docker-compose exec app ash
# composer install
# cp .env.example .env
# php artisan key:generate
# php artisan migrate